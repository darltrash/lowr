import types {Source, Blob, Image, ModelData, Rasterizer, Sound}

append: extern fun(str, any?) -> float = "lovr.filesystem.append"
createDirectory: extern fun(str) -> bool = "lovr.filesystem.createDirectory"
getAppdataDirectory: extern fun() -> str = "lovr.filesystem.getAppdataDirectory"
getDirectoryItems: extern fun(str) -> any = "lovr.filesystem.getDirectoryItems"
getExecutablePath: extern fun() -> str = "lovr.filesystem.getExecutablePath"
getIdentity: extern fun() -> str = "lovr.filesystem.getIdentity"
getLastModified: extern fun(str) -> float = "lovr.filesystem.getLastModified"
getRealDirectory: extern fun(str) -> str = "lovr.filesystem.getRealDirectory"
getRequirePath: extern fun() -> str = "lovr.filesystem.getRequirePath"
getSaveDirectory: extern fun() -> str = "lovr.filesystem.getSaveDirectory"
getSize: extern fun(str) -> float = "lovr.filesystem.getSize"
getSource: extern fun() -> str = "lovr.filesystem.getSource"
getUserDirectory: extern fun() -> str = "lovr.filesystem.getUserDirectory"
getWorkingDirectory: extern fun() -> str = "lovr.filesystem.getWorkingDirectory"
isDirectory: extern fun(str) -> bool = "lovr.filesystem.isDirectory"
isFile: extern fun(str) -> bool = "lovr.filesystem.isFile"
isFused: extern fun() -> bool = "lovr.filesystem.isFused"
load: extern fun(str) -> any = "lovr.filesystem.load"
mount: extern fun(str, str?, bool?, str?) -> bool = "lovr.filesystem.mount"
newBlob: extern fun(str) -> Blob = "lovr.filesystem.newBlob"
read: extern fun(str, float?) -> (str, float?) = "lovr.filesystem.read"
remove: extern fun(str) -> bool = "lovr.filesystem.remove"
setIdentity: extern fun(str)  = "lovr.filesystem.setIdentity"
setRequirePath: extern fun(str)  = "lovr.filesystem.setRequirePath"
setSource: extern fun(str)  = "lovr.filesystem.setSource"
unmount: extern fun(str) -> bool = "lovr.filesystem.unmount"
write: extern fun(str, any?) -> float = "lovr.filesystem.write"
