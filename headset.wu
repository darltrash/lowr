import types {Source, Blob, Image, ModelData, Rasterizer, Sound, Canvas, Font, Material, Mesh, Model, Shader, ShaderBlock, Texture}

animate: extern fun(str, Model?) -> bool = "lovr.headset.animate"
getAngularVelocity: extern fun(str) -> (float, float?, float?) = "lovr.headset.getAngularVelocity"
getAxis: extern fun(str, str?) -> float = "lovr.headset.getAxis"
getBoundsDepth: extern fun() -> float = "lovr.headset.getBoundsDepth"
getBoundsDimensions: extern fun() -> (float, float?) = "lovr.headset.getBoundsDimensions"
getBoundsGeometry: extern fun(any) -> any = "lovr.headset.getBoundsGeometry"
getBoundsWidth: extern fun() -> float = "lovr.headset.getBoundsWidth"
getClipDistance: extern fun() -> (float, float?) = "lovr.headset.getClipDistance"
getDisplayDimensions: extern fun() -> (float, float?) = "lovr.headset.getDisplayDimensions"
getDisplayFrequency: extern fun() -> float = "lovr.headset.getDisplayFrequency"
getDisplayHeight: extern fun() -> float = "lovr.headset.getDisplayHeight"
getDisplayMask: extern fun() -> any = "lovr.headset.getDisplayMask"
getDisplayWidth: extern fun() -> float = "lovr.headset.getDisplayWidth"
getDriver: extern fun(str) -> str = "lovr.headset.getDriver"
getHands: extern fun() -> any = "lovr.headset.getHands"
getMirrorTexture: extern fun() -> Texture = "lovr.headset.getMirrorTexture"
getName: extern fun() -> str = "lovr.headset.getName"
getOrientation: extern fun(str) -> (float, float?, float?, float?) = "lovr.headset.getOrientation"
getOriginType: extern fun() -> str = "lovr.headset.getOriginType"
getPose: extern fun(str) -> (float, float?, float?, float?, float?, float?, float?) = "lovr.headset.getPose"
getPosition: extern fun(str) -> (float, float?, float?) = "lovr.headset.getPosition"
getSkeleton: extern fun(str, any?) -> any = "lovr.headset.getSkeleton"
getTime: extern fun() -> float = "lovr.headset.getTime"
getVelocity: extern fun(str) -> (float, float?, float?) = "lovr.headset.getVelocity"
getViewAngles: extern fun(float) -> (float, float?, float?, float?) = "lovr.headset.getViewAngles"
getViewCount: extern fun() -> float = "lovr.headset.getViewCount"
getViewPose: extern fun(float) -> (float, float?, float?, float?, float?, float?, float?) = "lovr.headset.getViewPose"
isDown: extern fun(str, str?) -> bool = "lovr.headset.isDown"
isTouched: extern fun(str, str?) -> bool = "lovr.headset.isTouched"
isTracked: extern fun(str) -> bool = "lovr.headset.isTracked"
newModel: extern fun(str, any?) -> Model = "lovr.headset.newModel"
renderTo: extern fun(any)  = "lovr.headset.renderTo"
setClipDistance: extern fun(float, float?)  = "lovr.headset.setClipDistance"
vibrate: extern fun(str, float?, float?, float?) -> bool = "lovr.headset.vibrate"
wasPressed: extern fun(str, str?) -> bool = "lovr.headset.wasPressed"
wasReleased: extern fun(str, str?) -> bool = "lovr.headset.wasReleased"
