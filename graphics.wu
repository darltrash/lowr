import types {Source, Blob, Image, ModelData, Rasterizer, Sound, Canvas, Font, Material, Mesh, Model, Shader, ShaderBlock, Texture}

arc: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?)  = "lovr.graphics.arc"
box: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?)  = "lovr.graphics.box"
circle: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?, any?)  = "lovr.graphics.circle"
clear: extern fun(any, any?, any?, float?, float?, float?)  = "lovr.graphics.clear"
compute: extern fun(Shader, float?, float?, float?)  = "lovr.graphics.compute"
createWindow: extern fun(any)  = "lovr.graphics.createWindow"
cube: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?)  = "lovr.graphics.cube"
cylinder: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, float?)  = "lovr.graphics.cylinder"
discard: extern fun(bool, bool?, bool?)  = "lovr.graphics.discard"
fill: extern fun(Texture, float?, float?, float?, float?)  = "lovr.graphics.fill"
flush: extern fun()  = "lovr.graphics.flush"
getAlphaSampling: extern fun() -> bool = "lovr.graphics.getAlphaSampling"
getBackgroundColor: extern fun() -> (float, float?, float?, float?) = "lovr.graphics.getBackgroundColor"
getBlendMode: extern fun() -> (str, str?) = "lovr.graphics.getBlendMode"
getCanvas: extern fun() -> Canvas = "lovr.graphics.getCanvas"
getColor: extern fun() -> (float, float?, float?, float?) = "lovr.graphics.getColor"
getColorMask: extern fun()  = "lovr.graphics.getColorMask"
getDefaultFilter: extern fun() -> (str, float?) = "lovr.graphics.getDefaultFilter"
getDepthTest: extern fun() -> (str, bool?) = "lovr.graphics.getDepthTest"
getDimensions: extern fun() -> (float, float?) = "lovr.graphics.getDimensions"
getFeatures: extern fun() -> any = "lovr.graphics.getFeatures"
getFont: extern fun() -> Font = "lovr.graphics.getFont"
getHeight: extern fun() -> float = "lovr.graphics.getHeight"
getLimits: extern fun() -> any = "lovr.graphics.getLimits"
getLineWidth: extern fun() -> float = "lovr.graphics.getLineWidth"
getPixelDensity: extern fun() -> float = "lovr.graphics.getPixelDensity"
getPointSize: extern fun() -> float = "lovr.graphics.getPointSize"
getProjection: extern fun(float, any?) -> (any, float?, float?, float?) = "lovr.graphics.getProjection"
getShader: extern fun() -> Shader = "lovr.graphics.getShader"
getStats: extern fun() -> any = "lovr.graphics.getStats"
getStencilTest: extern fun() -> (str, float?) = "lovr.graphics.getStencilTest"
getViewPose: extern fun(float, any?, bool?) -> (any, float?, float?, float?, float?, float?, float?) = "lovr.graphics.getViewPose"
getWidth: extern fun() -> float = "lovr.graphics.getWidth"
getWinding: extern fun() -> str = "lovr.graphics.getWinding"
hasWindow: extern fun() -> bool = "lovr.graphics.hasWindow"
isCullingEnabled: extern fun() -> bool = "lovr.graphics.isCullingEnabled"
isWireframe: extern fun() -> bool = "lovr.graphics.isWireframe"
line: extern fun(any, float?, float?, float?, float?, float?, float?)  = "lovr.graphics.line"
newCanvas: extern fun(any, any?, any?) -> Canvas = "lovr.graphics.newCanvas"
newComputeShader: extern fun(str, any?) -> Shader = "lovr.graphics.newComputeShader"
newFont: extern fun(any, any?, any?, float?) -> Font = "lovr.graphics.newFont"
newMaterial: extern fun(any, any?, any?, any?, any?) -> Material = "lovr.graphics.newMaterial"
newMesh: extern fun(any, any?, any?, any?, any?) -> Mesh = "lovr.graphics.newMesh"
newModel: extern fun(any) -> Model = "lovr.graphics.newModel"
newShader: extern fun(str, any?, any?) -> Shader = "lovr.graphics.newShader"
newShaderBlock: extern fun(str, any?, any?) -> ShaderBlock = "lovr.graphics.newShaderBlock"
newTexture: extern fun(any, any?, float?, any?) -> Texture = "lovr.graphics.newTexture"
origin: extern fun()  = "lovr.graphics.origin"
plane: extern fun(any, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?, any?)  = "lovr.graphics.plane"
points: extern fun(any, float?, float?, float?)  = "lovr.graphics.points"
pop: extern fun()  = "lovr.graphics.pop"
present: extern fun()  = "lovr.graphics.present"
print: extern fun(str, float?, float?, float?, float?, float?, float?, float?, float?, float?, str?, str?)  = "lovr.graphics.print"
push: extern fun()  = "lovr.graphics.push"
reset: extern fun()  = "lovr.graphics.reset"
rotate: extern fun(float, float?, float?, float?)  = "lovr.graphics.rotate"
scale: extern fun(float, float?, float?)  = "lovr.graphics.scale"
setAlphaSampling: extern fun(bool)  = "lovr.graphics.setAlphaSampling"
setBackgroundColor: extern fun(any, any?, float?, float?)  = "lovr.graphics.setBackgroundColor"
setBlendMode: extern fun(str, str?)  = "lovr.graphics.setBlendMode"
setCanvas: extern fun(Canvas)  = "lovr.graphics.setCanvas"
setColor: extern fun(any, any?, float?, float?)  = "lovr.graphics.setColor"
setColorMask: extern fun(bool, bool?, bool?, bool?)  = "lovr.graphics.setColorMask"
setCullingEnabled: extern fun(bool)  = "lovr.graphics.setCullingEnabled"
setDefaultFilter: extern fun(str, float?)  = "lovr.graphics.setDefaultFilter"
setDepthTest: extern fun(str, bool?)  = "lovr.graphics.setDepthTest"
setFont: extern fun(Font)  = "lovr.graphics.setFont"
setLineWidth: extern fun(float)  = "lovr.graphics.setLineWidth"
setPointSize: extern fun(float)  = "lovr.graphics.setPointSize"
setProjection: extern fun(float, any?, float?, float?, float?)  = "lovr.graphics.setProjection"
setShader: extern fun(Shader)  = "lovr.graphics.setShader"
setStencilTest: extern fun(str, float?)  = "lovr.graphics.setStencilTest"
setViewPose: extern fun(float, any?, any?, float?, float?, float?, float?, float?)  = "lovr.graphics.setViewPose"
setWinding: extern fun(str)  = "lovr.graphics.setWinding"
setWireframe: extern fun(bool)  = "lovr.graphics.setWireframe"
skybox: extern fun(Texture)  = "lovr.graphics.skybox"
sphere: extern fun(any, any?, any?, any?, any?, any?, any?, any?, float?)  = "lovr.graphics.sphere"
stencil: extern fun(any, any?, any?, any?)  = "lovr.graphics.stencil"
tick: extern fun(str)  = "lovr.graphics.tick"
tock: extern fun(str) -> float = "lovr.graphics.tock"
transform: extern fun(any, float?, float?, float?, float?, float?, float?, float?, float?, float?)  = "lovr.graphics.transform"
translate: extern fun(float, float?, float?)  = "lovr.graphics.translate"
